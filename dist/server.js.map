{"version":3,"sources":["../server/server.js"],"names":["express","require","http","exp","bodyParser","next","database","mysql","server","createServer","dev","process","env","NODE_ENV","app","handle","getRequestHandler","connection","createConnection","host","user","password","use","urlencoded","extended","json","prepare","then","static","get","req","res","redirect","render","connect","err","console","log","code","fatal","post","insertRoom","body","createEventDropRoom","insertVideo","insertPlaylist","deletePlaylist","deleteUserByID","selectUserByEmail","selectUserById","selectUserAndRoomByUsername","selectUserByUsername","selectUserByUsernameOrEmail","insertUser","selectRooms","selectRoomByTitle","selectRoomHashedValue","selectVideosByRoomId","selectVideoByYoutubeId","updateUserPassword","updateUserRoomId","updateDeleteEvent","updateUpVotes","listen","catch","error","ex","stack","exit"],"mappings":"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","file":"server.js","sourcesContent":["const express = require(\"express\");\r\nconst http = require(\"http\");\r\nconst exp = express();\r\nconst bodyParser = require(\"body-parser\");\r\nconst next = require(\"next\");\r\nconst database = require(\"./database\");\r\nconst mysql = require(\"mysql\");\r\n\r\nconst server = http.createServer(exp);\r\nconst dev = process.env.NODE_ENV !== \"production\";\r\nconst app = next({ dev });\r\nconst handle = app.getRequestHandler();\r\n\r\n//Datenbankverbindung aufbauen\r\nconst connection = mysql.createConnection({\r\n  host: \"localhost\",\r\n  user: \"root\",\r\n  password: \"\",\r\n  database: \"streamtogether\"\r\n});\r\n\r\nexp.use(bodyParser.urlencoded({ extended: false }));\r\nexp.use(bodyParser.json());\r\napp\r\n  .prepare()\r\n  .then(async () => {\r\n    exp.use(express.static(\"./static/\"));\r\n\r\n    exp.get(\"/index\", async (req, res) => {\r\n      res.redirect(\"/\");\r\n    });\r\n\r\n    exp.get(\"/\", (req, res) => {\r\n      return app.render(req, res, \"/index\");\r\n    });\r\n\r\n    connection.connect(function(err) {\r\n      // in case of error\r\n      if (err) {\r\n        console.log(\"Database Connection ERROR\");\r\n        console.log(err.code);\r\n        console.log(err.fatal);\r\n      } else {\r\n        console.log(\"Database CONNECTED\");\r\n\r\n        exp.post(\"/createRoom\", (req, res) => {\r\n          database.insertRoom(res, req.body, connection);\r\n        });\r\n        exp.post(\"/createEventDropRoom\", (req, res) => {\r\n          database.createEventDropRoom(res, req.body, connection);\r\n        });\r\n        exp.post(\"/createVideo\", (req, res) => {\r\n          database.insertVideo(res, req.body, connection);\r\n        });\r\n        exp.post(\"/createPlaylist\", (req, res) => {\r\n          database.insertPlaylist(res, req.body, connection);\r\n        });\r\n        exp.post(\"/deletePlaylist\", (req, res) => {\r\n          database.deletePlaylist(res, req.body, connection);\r\n        });\r\n        exp.post(\"/deleteUser\", (req, res) => {\r\n          database.deleteUserByID(res, req.body, connection);\r\n        });\r\n        exp.post(\"/getuserbyemail\", (req, res) => {\r\n          database.selectUserByEmail(res, req.body, connection);\r\n        });\r\n        exp.post(\"/getUserById\", (req, res) => {\r\n          database.selectUserById(res, req.body, connection);\r\n        });\r\n        exp.post(\"/getuserandroombyusername\", (req, res) => {\r\n          database.selectUserAndRoomByUsername(res, req.body, connection);\r\n        });\r\n        exp.post(\"/getuserbyusername\", (req, res) => {\r\n          database.selectUserByUsername(res, req.body, connection);\r\n        });\r\n        exp.post(\"/login\", (req, res) => {\r\n          database.selectUserByUsernameOrEmail(res, req.body, connection);\r\n        });\r\n        exp.post(\"/register\", (req, res) => {\r\n          database.insertUser(res, req.body, connection);\r\n        });\r\n        exp.post(\"/selectRooms\" , (req, res) => {\r\n          database.selectRooms(res, req.body, connection);\r\n        });\r\n        exp.post(\"/selectRoomByTitle\", (req, res) => {\r\n          database.selectRoomByTitle(res, req.body, connection);\r\n        });\r\n        exp.post(\"/selectRoomInformation\", (req, res) => {\r\n          database.selectRoomHashedValue(res, req.body, connection);\r\n        });\r\n        exp.post(\"/selectVideosByRoomId\", (req, res) => {\r\n          database.selectVideosByRoomId(res, req.body, connection);\r\n        });\r\n        exp.post(\"/selectVideoByYoutubeId\", (req, res) => {\r\n          database.selectVideoByYoutubeId(res, req.body, connection);\r\n        });\r\n        exp.post(\"/updateUserPassword\", (req, res) => {\r\n          database.updateUserPassword(res, req.body, connection);\r\n        });\r\n        exp.post(\"/updateUserRoomId\", (req, res) => {\r\n          database.updateUserRoomId(res, req.body, connection);\r\n        });\r\n        exp.post(\"/updateDeleteEvent\", (req, res) => {\r\n          database.updateDeleteEvent(res, req.body, connection);\r\n        });\r\n        exp.post(\"/updateUpVotes\", (req, res) => {\r\n          database.updateUpVotes(res, req.body, connection);\r\n        });\r\n\r\n      }\r\n    });\r\n\r\n    //Datenbank etc.\r\n\r\n    exp.get(\"*\", (req, res) => {\r\n      return handle(req, res);\r\n    });\r\n\r\n    server.listen(3000, err => {\r\n      if (err) throw err;\r\n      console.log(\"> Ready on http://localhost:3000\");\r\n    });\r\n  })\r\n  .catch(ex => {\r\n    console.error(ex.stack);\r\n    process.exit(1);\r\n  });\r\n"]}