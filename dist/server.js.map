{"version":3,"sources":["../server/server.js"],"names":["express","require","http","exp","bodyParser","next","server","createServer","dev","process","env","NODE_ENV","app","handle","getRequestHandler","use","urlencoded","extended","json","prepare","then","static","get","req","res","redirect","query","xzy","render","listen","err","console","log","catch","error","ex","stack","exit"],"mappings":";;;;;;;;;;AAAA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,IAAME,MAAMH,SAAZ;AACA,IAAMI,aAAaH,QAAQ,aAAR,CAAnB;AACA,IAAMI,OAAOJ,QAAQ,MAAR,CAAb;;AAEA,IAAMK,SAASJ,KAAKK,YAAL,CAAkBJ,GAAlB,CAAf;AACA,IAAMK,MAAMC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAArC;AACA,IAAMC,MAAMP,KAAK,EAAEG,QAAF,EAAL,CAAZ;AACA,IAAMK,SAASD,IAAIE,iBAAJ,EAAf;;AAEAX,IAAIY,GAAJ,CAAQX,WAAWY,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACAd,IAAIY,GAAJ,CAAQX,WAAWc,IAAX,EAAR;AACAN,IACKO,OADL,GAEKC,IAFL,4DAEU;AAAA;AAAA;AAAA;AAAA;AACFjB,wBAAIY,GAAJ,CAAQf,QAAQqB,MAAR,CAAe,WAAf,CAAR;;AAEAlB,wBAAImB,GAAJ,CAAQ,QAAR;AAAA,+FAAkB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AACdA,gDAAIC,QAAJ,CAAa,GAAb;;AADc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAlB;;AAAA;AAAA;AAAA;AAAA;;AAIAtB,wBAAImB,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACvB,4BAAIE,QAAM;AACNC,iCAAI;AADE,yBAAV;AAGA,+BAAOf,IAAIgB,MAAJ,CAAWL,GAAX,EAAgBC,GAAhB,EAAqB,QAArB,EAA+BE,KAA/B,CAAP;AACH,qBALD;;AAOAvB,wBAAImB,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACvB,+BAAOX,OAAOU,GAAP,EAAYC,GAAZ,CAAP;AACH,qBAFD;;AAIAlB,2BAAOuB,MAAP,CAAc,IAAd,EAAoB,eAAO;AACvB,4BAAIC,GAAJ,EAAS,MAAMA,GAAN;AACTC,gCAAQC,GAAR,CAAY,kCAAZ;AACH,qBAHD;;AAlBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAFV,IAyBKC,KAzBL,CAyBW,cAAM;AACTF,YAAQG,KAAR,CAAcC,GAAGC,KAAjB;AACA3B,YAAQ4B,IAAR,CAAa,CAAb;AACH,CA5BL","file":"server.js","sourcesContent":["const express = require(\"express\");\r\nconst http = require(\"http\");\r\nconst exp = express();\r\nconst bodyParser = require(\"body-parser\");\r\nconst next = require(\"next\");\r\n\r\nconst server = http.createServer(exp);\r\nconst dev = process.env.NODE_ENV !== \"production\";\r\nconst app = next({ dev });\r\nconst handle = app.getRequestHandler();\r\n\r\nexp.use(bodyParser.urlencoded({ extended: false }));\r\nexp.use(bodyParser.json());\r\napp\r\n    .prepare()\r\n    .then(async () => {\r\n        exp.use(express.static(\"./static/\"));\r\n\r\n        exp.get(\"/index\", async (req, res) => {\r\n            res.redirect(\"/\");\r\n        });\r\n\r\n        exp.get(\"/\", (req, res) => {\r\n            let query={\r\n                xzy:\"abc\"\r\n            }\r\n            return app.render(req, res, \"/index\", query);\r\n        });\r\n\r\n        exp.get(\"*\", (req, res) => {\r\n            return handle(req, res);\r\n        });\r\n\r\n        server.listen(3000, err => {\r\n            if (err) throw err;\r\n            console.log(\"> Ready on http://localhost:3000\");\r\n        });\r\n    })\r\n    .catch(ex => {\r\n        console.error(ex.stack);\r\n        process.exit(1);\r\n    });\r\n"]}